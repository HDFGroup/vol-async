name: "CodeQL"

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  schedule:
    - cron: "16 7 * * 0"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ cpp ]

    steps:
      - name: Checkout submodule Argobots
        uses: actions/checkout@v4.1.1
        with:
          submodules: 'true'
        
      - name: Checkout HDF5 latest
        uses: actions/checkout@v4.1.1
        with:
          repository: HDFGroup/hdf5
          path: hdf5
      
      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libtool libopenmpi-dev zlib1g-dev python3 cmake
          
      - name: Configure Async VOL (install dependencies)
        run: |
          mydir="$PWD"
          export HDF5_DIR=$mydir/hdf5/install
          export ABT_DIR=$mydir/argobots
          export VOL_DIR=$mydir/vol-async/install
          
          mkdir $HDF5_DIR
          # Compile HDF5
          cd hdf5
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=$HDF5_DIR -DHDF5_ENABLE_PARALLEL=ON -DHDF5_ENABLE_THREADSAFE=ON \
            -DALLOW_UNSUPPORTED=ON -DBUILD_TESTING=OFF -DHDF5_BUILD_HL_LIB=OFF \
            -DHDF5_BUILD_EXAMPLES=OFF -DHDF5_BUILD_FORTRAN=OFF -DCMAKE_C_COMPILER=mpicc ..
          make -j && make install
          
          # Compile Argobots
          cd $ABT_DIR
          ./autogen.sh
          ./configure --prefix=$ABT_DIR
          make && make install

          # Configure Asynchronous VOL connector
          pwd
          cd ../
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=$VOL_DIR -DCMAKE_C_COMPILER=mpicc ..

      - name: Build Async VOL
         run: |
          cd build
          make && make install
          ctest -V .

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
